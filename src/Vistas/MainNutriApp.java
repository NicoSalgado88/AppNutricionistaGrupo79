package Vistas;

import AccesoADatos.*;
import Entidades.*;
//import Entidades.Telefono;
import  com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.intellijthemes.FlatSolarizedLightIJTheme;
import java.awt.event.ItemEvent;
import java.sql.Date;
import java.time.ZoneId;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

public class MainNutriApp extends javax.swing.JFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    private DefaultTableModel modeloComidaAsignada = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    private DefaultTableModel modeloComidaNoAsignada = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    private DefaultTableModel modeloComidaPaciente = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    private DefaultTableModel modeloComidas = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    PacienteData pd = new PacienteData();
    DietaData dd = new DietaData();
    ComidaData cd = new ComidaData();
    DCData dcd = new DCData();
    TelefonoData td = new TelefonoData();
    private boolean ejecucion = true;
    private boolean ejecucionComida = true;
    Dieta modD = new Dieta();
    Paciente modP = new Paciente();
    Comida modC = new Comida();

    public MainNutriApp() {
        initComponents();
        head();
        headComidaPaciente();
        headComidas();
        headComidaAsignada();
        headComidaNoAsignada();
        cargarCombox();
        jcbPacientes.setSelectedIndex(-1);
        jcbDietaComida.setSelectedIndex(-1);
        jbGuardarMod.setVisible(false);
        jbMod.setEnabled(false);
        jbEliminar.setEnabled(false);
        jbGuardarModDieta.setVisible(false);
        jbGuardarModComida.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorTab = new javax.swing.JTabbedPane();
        tabPacientes = new javax.swing.JTabbedPane();
        infoPaciente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();
        jcbPacientes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jbMod = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbReinicio = new javax.swing.JButton();
        cargaPaciente = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jtNombre = new javax.swing.JTextField();
        jtDni = new javax.swing.JTextField();
        jtDomicilio = new javax.swing.JTextField();
        jtTelefono = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jbGuardar = new javax.swing.JButton();
        jbGuardarMod = new javax.swing.JButton();
        tabDietas = new javax.swing.JTabbedPane();
        infoDieta = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jcbPacienteDieta = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaComidaPaciente = new javax.swing.JTable();
        panelPacienteDieta = new javax.swing.JPanel();
        nombrePaciente = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nombreDieta = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jbModDieta = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pesoInicial = new javax.swing.JLabel();
        pesoActual = new javax.swing.JLabel();
        pesoFinal = new javax.swing.JLabel();
        fechaInicio = new javax.swing.JLabel();
        fechaFin = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jbEditComidas = new javax.swing.JButton();
        cargaDieta = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jtNombreDieta = new javax.swing.JTextField();
        jtPesoActual = new javax.swing.JTextField();
        jtPesoInicial = new javax.swing.JTextField();
        jtPesoFinal = new javax.swing.JTextField();
        jcbPacienteCargaDieta = new javax.swing.JComboBox<>();
        jbCrearDieta = new javax.swing.JButton();
        jbGuardarModDieta = new javax.swing.JButton();
        jdcInicio = new com.toedter.calendar.JDateChooser();
        jdcFinal = new com.toedter.calendar.JDateChooser();
        tabComidas = new javax.swing.JTabbedPane();
        infoComidas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaComidas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaDieta = new javax.swing.JList<>();
        jbModDietaComida = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jbModComida = new javax.swing.JButton();
        cargaComida = new javax.swing.JPanel();
        jtNombreComida = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtDetalleComida = new javax.swing.JTextArea();
        jtCaloriasComida = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jbGuardarComida = new javax.swing.JButton();
        jbGuardarModComida = new javax.swing.JButton();
        asignarComidas = new javax.swing.JPanel();
        jcbDietaComida = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jbQuitarComida = new javax.swing.JButton();
        jbAgregarComida = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtNoAsignada = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtAsignada = new javax.swing.JTable();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        cabecera = new javax.swing.JPanel();
        SliderLD = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1125, 713));

        contenedorTab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        tabPacientes.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabPacientes.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        tabPacientes.setMinimumSize(new java.awt.Dimension(164, 164));

        infoPaciente.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        tablaPacientes.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPacientes);

        jcbPacientes.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jcbPacientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbPacientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPacientesItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel2.setText("Paciente");

        jbMod.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbMod.setText("Modificar");
        jbMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModActionPerformed(evt);
            }
        });

        jbEliminar.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbReinicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/reinicio1_preview_rev_1.png"))); // NOI18N
        jbReinicio.setBorder(null);
        jbReinicio.setBorderPainted(false);
        jbReinicio.setContentAreaFilled(false);
        jbReinicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbReinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbReinicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoPacienteLayout = new javax.swing.GroupLayout(infoPaciente);
        infoPaciente.setLayout(infoPacienteLayout);
        infoPacienteLayout.setHorizontalGroup(
            infoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPacienteLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jcbPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jbReinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jbMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbEliminar)
                .addContainerGap(598, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        infoPacienteLayout.setVerticalGroup(
            infoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPacienteLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(infoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPacienteLayout.createSequentialGroup()
                        .addComponent(jbReinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(infoPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jcbPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbMod)
                        .addComponent(jbEliminar)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        tabPacientes.addTab("Info", infoPaciente);
        infoPaciente.getAccessibleContext().setAccessibleName("InfoPacientes");

        jtNombre.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtDni.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtDomicilio.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtTelefono.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel4.setText("Nombre y Apellido");

        jLabel5.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel5.setText("DNI");

        jLabel6.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel6.setText("Domicilio");

        jLabel7.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel7.setText("Teléfono");

        jbGuardar.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbGuardarMod.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbGuardarMod.setText("Guardar modificación");
        jbGuardarMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarModActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtDni)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(240, 240, 240))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jbGuardar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(427, 427, 427)
                        .addComponent(jbGuardarMod)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(80, 80, 80)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGap(59, 59, 59)
                .addComponent(jbGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbGuardarMod)
                .addContainerGap(201, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cargaPacienteLayout = new javax.swing.GroupLayout(cargaPaciente);
        cargaPaciente.setLayout(cargaPacienteLayout);
        cargaPacienteLayout.setHorizontalGroup(
            cargaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cargaPacienteLayout.setVerticalGroup(
            cargaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPacientes.addTab("Carga datos", cargaPaciente);
        cargaPaciente.getAccessibleContext().setAccessibleName("CargarPacientes");

        contenedorTab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Vistas/personita3_preview_rev_1.png")), tabPacientes); // NOI18N
        tabPacientes.getAccessibleContext().setAccessibleName("Pacientes");

        tabDietas.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabDietas.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel8.setText("Paciente");

        jcbPacienteDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jcbPacienteDieta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbPacienteDieta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbPacienteDietaItemStateChanged(evt);
            }
        });

        tablaComidaPaciente.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        tablaComidaPaciente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaComidaPaciente);

        panelPacienteDieta.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        panelPacienteDieta.setForeground(new java.awt.Color(153, 153, 153));

        nombrePaciente.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        nombrePaciente.setText("jLabel9");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("-");

        nombreDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        nombreDieta.setText("jLabel9");

        jLabel10.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel10.setText("Comienzo:");

        jbModDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbModDieta.setText("Modificar");
        jbModDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModDietaActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel11.setText("Fin:");

        jLabel12.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel12.setText("Peso inicial");

        jLabel13.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel13.setText("Peso actual");

        jLabel14.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel14.setText("Peso objetivo");

        pesoInicial.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        pesoInicial.setText("jLabel15");

        pesoActual.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        pesoActual.setText("jLabel16");

        pesoFinal.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        pesoFinal.setText("jLabel17");

        fechaInicio.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        fechaInicio.setText("jLabel15");

        fechaFin.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        fechaFin.setText("jLabel15");

        javax.swing.GroupLayout panelPacienteDietaLayout = new javax.swing.GroupLayout(panelPacienteDieta);
        panelPacienteDieta.setLayout(panelPacienteDietaLayout);
        panelPacienteDietaLayout.setHorizontalGroup(
            panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaInicio))
                            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nombrePaciente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(19, 19, 19)
                                .addComponent(jLabel9)))
                        .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaFin))
                            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pesoActual)
                                    .addComponent(pesoInicial)
                                    .addComponent(pesoFinal)))
                            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(nombreDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jbModDieta)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        panelPacienteDietaLayout.setVerticalGroup(
            panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPacienteDietaLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombrePaciente)
                    .addComponent(nombreDieta)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(pesoInicial))
                .addGap(50, 50, 50)
                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(pesoActual))
                .addGap(50, 50, 50)
                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(pesoFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(panelPacienteDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(fechaInicio)
                    .addComponent(jLabel11)
                    .addComponent(fechaFin))
                .addGap(50, 50, 50)
                .addComponent(jbModDieta)
                .addGap(39, 39, 39))
        );

        jLabel15.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel15.setText("Detalle dieta");

        jbEditComidas.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbEditComidas.setText("Editar comidas");
        jbEditComidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditComidasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoDietaLayout = new javax.swing.GroupLayout(infoDieta);
        infoDieta.setLayout(infoDietaLayout);
        infoDietaLayout.setHorizontalGroup(
            infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoDietaLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoDietaLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jcbPacienteDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(infoDietaLayout.createSequentialGroup()
                        .addComponent(panelPacienteDieta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(infoDietaLayout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addGroup(infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))
                                .addGap(55, 55, 55))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoDietaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEditComidas)
                                .addGap(236, 236, 236))))))
        );
        infoDietaLayout.setVerticalGroup(
            infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoDietaLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbPacienteDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(infoDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoDietaLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbEditComidas))
                    .addGroup(infoDietaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panelPacienteDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        tabDietas.addTab("Info", infoDieta);

        jLabel16.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel16.setText("Nombre dieta");

        jLabel17.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel17.setText("Paciente");

        jLabel18.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel18.setText("Fecha de inicio");

        jLabel19.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel19.setText("Fecha objetivo");

        jLabel20.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel20.setText("Peso inicial");

        jLabel21.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel21.setText("Peso actual");

        jLabel22.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel22.setText("Peso objetivo");

        jtNombreDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtPesoActual.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtPesoInicial.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtPesoFinal.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jcbPacienteCargaDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jbCrearDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbCrearDieta.setText("Crear dieta");
        jbCrearDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCrearDietaActionPerformed(evt);
            }
        });

        jbGuardarModDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbGuardarModDieta.setText("Modificar dieta");
        jbGuardarModDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarModDietaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cargaDietaLayout = new javax.swing.GroupLayout(cargaDieta);
        cargaDieta.setLayout(cargaDietaLayout);
        cargaDietaLayout.setHorizontalGroup(
            cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cargaDietaLayout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cargaDietaLayout.createSequentialGroup()
                        .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtPesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNombreDieta, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jdcInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(78, 78, 78)
                        .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel19)
                            .addComponent(jLabel17)))
                    .addGroup(cargaDietaLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(jtPesoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtPesoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbPacienteCargaDieta, 0, 140, Short.MAX_VALUE)
                    .addComponent(jdcFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(286, 286, 286))
            .addGroup(cargaDietaLayout.createSequentialGroup()
                .addGap(442, 442, 442)
                .addComponent(jbCrearDieta, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jbGuardarModDieta)
                .addGap(370, 370, 370))
        );
        cargaDietaLayout.setVerticalGroup(
            cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cargaDietaLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jtNombreDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbPacienteCargaDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(jLabel19))
                    .addComponent(jdcInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel22)
                    .addComponent(jtPesoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtPesoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jtPesoActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(cargaDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCrearDieta)
                    .addComponent(jbGuardarModDieta))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        tabDietas.addTab("Carga datos", cargaDieta);

        contenedorTab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Vistas/relojito_preview_rev_1.png")), tabDietas); // NOI18N

        tabComidas.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabComidas.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N

        tablaComidas.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        tablaComidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaComidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaComidasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaComidas);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel2.setForeground(new java.awt.Color(153, 153, 153));

        jLabel23.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        jLabel23.setText("Dietas asociadas:");

        listaDieta.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jScrollPane5.setViewportView(listaDieta);

        jbModDietaComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbModDietaComida.setText("Modificar dieta");
        jbModDietaComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModDietaComidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(174, 174, 174))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbModDietaComida)
                        .addGap(31, 31, 31)))
                .addContainerGap(526, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(707, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(139, Short.MAX_VALUE)
                .addComponent(jbModDietaComida)
                .addGap(10, 10, 10))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(46, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(20, 20, 20)))
        );

        jLabel24.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        jLabel24.setText("Seleccione una comida para ver más detalles:");

        jbModComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbModComida.setText("Modificar comida");
        jbModComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModComidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoComidasLayout = new javax.swing.GroupLayout(infoComidas);
        infoComidas.setLayout(infoComidasLayout);
        infoComidasLayout.setHorizontalGroup(
            infoComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoComidasLayout.createSequentialGroup()
                .addGroup(infoComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(infoComidasLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(infoComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 978, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(infoComidasLayout.createSequentialGroup()
                        .addGap(449, 449, 449)
                        .addComponent(jbModComida)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(infoComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(infoComidasLayout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(jLabel24)
                    .addContainerGap(654, Short.MAX_VALUE)))
        );
        infoComidasLayout.setVerticalGroup(
            infoComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoComidasLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbModComida)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(infoComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(infoComidasLayout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(jLabel24)
                    .addContainerGap(525, Short.MAX_VALUE)))
        );

        tabComidas.addTab("Info comidas", infoComidas);

        jtNombreComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jtDetalleComida.setColumns(20);
        jtDetalleComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jtDetalleComida.setRows(5);
        jScrollPane4.setViewportView(jtDetalleComida);

        jtCaloriasComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel25.setText("Nombre");

        jLabel26.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel26.setText("Detalle");

        jLabel27.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jLabel27.setText("Calorías");

        jbGuardarComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbGuardarComida.setText("Guardar");
        jbGuardarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarComidaActionPerformed(evt);
            }
        });

        jbGuardarModComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbGuardarModComida.setText("Modificar");
        jbGuardarModComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarModComidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cargaComidaLayout = new javax.swing.GroupLayout(cargaComida);
        cargaComida.setLayout(cargaComidaLayout);
        cargaComidaLayout.setHorizontalGroup(
            cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cargaComidaLayout.createSequentialGroup()
                .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cargaComidaLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel27))
                            .addComponent(jLabel25))
                        .addGap(78, 78, 78)
                        .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jtCaloriasComida, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                .addComponent(jtNombreComida, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(cargaComidaLayout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jbGuardarComida)
                        .addGap(18, 18, 18)
                        .addComponent(jbGuardarModComida)))
                .addContainerGap(507, Short.MAX_VALUE))
        );
        cargaComidaLayout.setVerticalGroup(
            cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cargaComidaLayout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNombreComida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cargaComidaLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel26)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cargaComidaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addGap(8, 8, 8)
                .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCaloriasComida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(74, 74, 74)
                .addGroup(cargaComidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardarComida)
                    .addComponent(jbGuardarModComida))
                .addContainerGap(126, Short.MAX_VALUE))
        );

        tabComidas.addTab("Carga datos", cargaComida);

        jcbDietaComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jcbDietaComida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbDietaComidaItemStateChanged(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        jLabel28.setText("Dieta:");

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jbQuitarComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbQuitarComida.setText(">>");
        jbQuitarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbQuitarComidaActionPerformed(evt);
            }
        });
        jSplitPane1.setTopComponent(jbQuitarComida);

        jbAgregarComida.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jbAgregarComida.setText("<<");
        jbAgregarComida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarComidaActionPerformed(evt);
            }
        });
        jSplitPane1.setBottomComponent(jbAgregarComida);

        jtNoAsignada.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jtNoAsignada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jtNoAsignada);

        jtAsignada.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 14)); // NOI18N
        jtAsignada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(jtAsignada);

        jLabel29.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        jLabel29.setText("No asignada:");

        jLabel30.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 16)); // NOI18N
        jLabel30.setText("Asignada:");

        javax.swing.GroupLayout asignarComidasLayout = new javax.swing.GroupLayout(asignarComidas);
        asignarComidas.setLayout(asignarComidasLayout);
        asignarComidasLayout.setHorizontalGroup(
            asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(asignarComidasLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(asignarComidasLayout.createSequentialGroup()
                        .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jcbDietaComida, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(209, 209, 209))
                    .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel30)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(74, 74, 74))
        );
        asignarComidasLayout.setVerticalGroup(
            asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(asignarComidasLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbDietaComida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(asignarComidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, asignarComidasLayout.createSequentialGroup()
                            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(164, 164, 164))))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jSplitPane1.getAccessibleContext().setAccessibleName("");

        tabComidas.addTab("Asignar comidas", asignarComidas);

        contenedorTab.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Vistas/comida_preview_rev_1.png")), tabComidas); // NOI18N
        tabComidas.getAccessibleContext().setAccessibleName("");

        SliderLD.setMajorTickSpacing(2);
        SliderLD.setMaximum(2);
        SliderLD.setMinimum(1);
        SliderLD.setMinorTickSpacing(1);
        SliderLD.setSnapToTicks(true);
        SliderLD.setValue(1);
        SliderLD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vistas/Clinica de nutrición (1)_preview_rev_1.png"))); // NOI18N

        javax.swing.GroupLayout cabeceraLayout = new javax.swing.GroupLayout(cabecera);
        cabecera.setLayout(cabeceraLayout);
        cabeceraLayout.setHorizontalGroup(
            cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabeceraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SliderLD, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        cabeceraLayout.setVerticalGroup(
            cabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabeceraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SliderLD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedorTab)
            .addComponent(cabecera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(cabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contenedorTab)
                .addContainerGap())
        );

        contenedorTab.getAccessibleContext().setAccessibleName("Pestañas");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jcbPacientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPacientesItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (ejecucion) {
                ejecucion = false;
            } else {
                jbMod.setEnabled(true);
                jbEliminar.setEnabled(true);
                modelo.setRowCount(0);
                Paciente pac = (Paciente) jcbPacientes.getSelectedItem();
                for (Paciente p : pd.listarPaciente()) {
                    if (p.getIdPaciente() == pac.getIdPaciente()) {
                        modelo.addRow(new Object[]{
                            p.getIdPaciente(),
                            p.getNombre(),
                            p.getDni(),
                            p.getDomicilio(),
                            p.getTel()
                        });
                    }
                }
            }
        }
    }//GEN-LAST:event_jcbPacientesItemStateChanged

    private void jbModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModActionPerformed
        tabPacientes.setSelectedIndex(1);
        modP = (Paciente) jcbPacientes.getSelectedItem();
        jtNombre.setText(modP.getNombre());
        jtDomicilio.setText(modP.getDomicilio());
        jtDni.setText(String.valueOf(modP.getDni()));
        jtTelefono.setText(String.valueOf(modP.getTel()));
        jbGuardarMod.setVisible(true);
        jbGuardar.setVisible(false);
        jbMod.setEnabled(false);
        jbEliminar.setEnabled(false);
        llenarTabla();
        jcbPacientes.setSelectedIndex(-1);

    }//GEN-LAST:event_jbModActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        Paciente p = new Paciente();
        try {
            if (!jtDni.getText().isEmpty()) {
                p.setDni(Integer.parseInt(jtDni.getText()));
            }
            if (!jtNombre.getText().isEmpty()) {
                p.setNombre(jtNombre.getText());
            }
            if (!jtDomicilio.getText().isEmpty()) {
                p.setDomicilio(jtDomicilio.getText());
            }
            if (!jtTelefono.getText().isEmpty()) {
                p.setTel(Integer.parseInt(jtTelefono.getText()));
                p.setActivo(true);
                pd.guardarPaciente(p);
                limpiarCargaPaciente();
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos se encuentran vacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los campos 'DNI' y 'Teléfono' solo admiten números", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbGuardarModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarModActionPerformed

        try {
            if (!jtDni.getText().isEmpty()) {
                modP.setDni(Integer.parseInt(jtDni.getText()));
            }
            if (!jtNombre.getText().isEmpty()) {
                modP.setNombre(jtNombre.getText());
            }
            if (!jtDomicilio.getText().isEmpty()) {
                modP.setDomicilio(jtDomicilio.getText());
            }
            if (!jtTelefono.getText().isEmpty()) {
                modP.setTel(Integer.parseInt(jtTelefono.getText()));
                modP.setActivo(true);
                pd.modificarPaciente(modP);
                modP = null;
                limpiarCargaPaciente();
                jbGuardarMod.setVisible(false);
                jbGuardar.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos se encuentran vacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los campos 'DNI' y 'Teléfono' solo admiten números", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbGuardarModActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        modP = (Paciente) jcbPacientes.getSelectedItem();
        int eliminar = JOptionPane.showConfirmDialog(null, "Desea eliminar al paciente " + modP.getNombre(), "¿Está seguro?",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (eliminar == JOptionPane.OK_OPTION) {
            pd.eliminarPaciente(modP.getIdPaciente());
            cargarCombox();
            llenarTabla();
            jcbPacientes.setSelectedIndex(-1);
            jbMod.setEnabled(false);
            jbEliminar.setEnabled(false);
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbReinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbReinicioActionPerformed
        cargarCombox();
        jcbPacientes.setSelectedIndex(-1);
        llenarTabla();
        jbMod.setEnabled(false);
        jbEliminar.setEnabled(false);
    }//GEN-LAST:event_jbReinicioActionPerformed

    private void jcbPacienteDietaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbPacienteDietaItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (ejecucion) {
                ejecucion = false;
            } else {
//        panelPacienteDieta.setVisible(true);
                Paciente p = (Paciente) jcbPacienteDieta.getSelectedItem();
                Dieta d = dd.buscarDietaPorPaciente(p.getIdPaciente());
                nombrePaciente.setText(p.getNombre());
                nombreDieta.setText(d.getNombre());
                pesoInicial.setText(String.valueOf(d.getpInicial()));
                pesoActual.setText(String.valueOf(d.getpActual()));
                pesoFinal.setText(String.valueOf(d.getpFinal()));
                fechaInicio.setText(String.valueOf(d.getfInicio()));
                fechaFin.setText(String.valueOf(d.getfFin()));
                modeloComidaPaciente.setRowCount(0);
                for (Comida c : dcd.listarComidaPorDieta(d.getIdDieta())) {
                    modeloComidaPaciente.addRow(new Object[]{
                        c.getNombre(),
                        c.getDetalle(),
                        c.getCantCal()
                    });
                }

            }
        }
    }//GEN-LAST:event_jcbPacienteDietaItemStateChanged

    private void jbModDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModDietaActionPerformed
        tabDietas.setSelectedIndex(1);
        Paciente p = (Paciente) jcbPacienteDieta.getSelectedItem();
        modD = dd.buscarDietaPorPaciente(p.getIdPaciente());
        jbCrearDieta.setVisible(false);
        jbGuardarModDieta.setVisible(true);
        jtNombreDieta.setText(modD.getNombre());
//*****SE "REINICIA" EL COMBOBOX PARA QUE APAREZCAN SOLO PACIENTES CON DIETAS PREVIAS*****
        jcbPacienteCargaDieta.removeAllItems();
        for (Paciente pp : dd.listarPacientesConDieta()) {
            jcbPacienteCargaDieta.addItem(pp);
        }
//*****ASI SOLO SE PUEDEN MODIFICAR DIETAS ASIGNADAS*****
        jtPesoInicial.setText(String.valueOf(modD.getpInicial()));
        jtPesoFinal.setText(String.valueOf(modD.getpFinal()));
        jtPesoActual.setText(String.valueOf(modD.getpActual()));
        jdcInicio.setDate(Date.valueOf(modD.getfInicio()));
        jdcFinal.setDate(Date.valueOf(modD.getfFin()));
    }//GEN-LAST:event_jbModDietaActionPerformed

    private void jbGuardarModDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarModDietaActionPerformed
        try {
            if (!jtNombreDieta.getText().isEmpty()) {
                modD.setNombre(jtNombreDieta.getText());
            }
            if (jcbPacienteCargaDieta.getSelectedItem() != null) {
                modD.setPaciente((Paciente) jcbPacienteCargaDieta.getSelectedItem());
            }
            if (jdcInicio.getDate() != null) {
                modD.setfInicio(jdcInicio.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            }
            if (jdcFinal.getDate() != null) {
                modD.setfFin(jdcFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            }
            if (!jtPesoInicial.getText().isEmpty()) {
                modD.setpInicial(Double.parseDouble(jtPesoInicial.getText()));
            }
            if (!jtPesoFinal.getText().isEmpty()) {
                modD.setpFinal(Double.parseDouble(jtPesoFinal.getText()));
            }
            if (!jtPesoActual.getText().isEmpty()) {
                modD.setpActual(Double.parseDouble(jtPesoActual.getText()));
                modD.setActivo(true);
                dd.modificarDieta(modD);
                modD = null;
                limpiarCargaDieta();
                jbCrearDieta.setVisible(true);
                jbGuardarModDieta.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos se encuentran vacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los campos de 'Peso' solo admiten números", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbGuardarModDietaActionPerformed

    private void jbCrearDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCrearDietaActionPerformed
        Dieta d = new Dieta();
        try {
            if (!jtNombreDieta.getText().isEmpty()) {
                d.setNombre(jtNombreDieta.getText());
            }
            if (jcbPacienteCargaDieta.getSelectedItem() != null) {
                d.setPaciente((Paciente) jcbPacienteCargaDieta.getSelectedItem());
            }
            if (jdcInicio.getDate() != null) {
                d.setfInicio(jdcInicio.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            }
            if (jdcFinal.getDate() != null) {
                d.setfFin(jdcFinal.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
            }
            if (!jtPesoInicial.getText().isEmpty()) {
                d.setpInicial(Double.parseDouble(jtPesoInicial.getText()));
            }
            if (!jtPesoFinal.getText().isEmpty()) {
                d.setpFinal(Double.parseDouble(jtPesoFinal.getText()));
            }
            if (!jtPesoActual.getText().isEmpty()) {
                d.setpActual(Double.parseDouble(jtPesoActual.getText()));
                d.setActivo(true);
                dd.guardarDieta(d);
                d = null;
                limpiarCargaDieta();
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos se encuentran vacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Los campos de 'Peso' solo admiten números", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbCrearDietaActionPerformed

    private void tablaComidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaComidasMouseClicked
        int f = tablaComidas.getSelectedRow();
        String[] dietas = new String[dcd.listarDietaPorComida((Integer) (tablaComidas.getValueAt(f, 0))).size()];
        int i = 0;
        for (Dieta d : dcd.listarDietaPorComida((Integer) (tablaComidas.getValueAt(f, 0)))) {
            dietas[i] = (d.getNombre());
            i++;
        }
        listaDieta.setListData(dietas);
    }//GEN-LAST:event_tablaComidasMouseClicked

    private void jbEditComidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditComidasActionPerformed
        contenedorTab.setSelectedIndex(2);
        tabComidas.setSelectedIndex(0);
    }//GEN-LAST:event_jbEditComidasActionPerformed

    private void jbModComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModComidaActionPerformed
        if (tablaComidas.getSelectedRow() != -1) {
            tabComidas.setSelectedIndex(1);
            int idC = (Integer) tablaComidas.getValueAt(tablaComidas.getSelectedRow(), 0);
            modC = cd.buscarComida(idC);
            jtNombreComida.setText(modC.getNombre());
            jtDetalleComida.setText(modC.getDetalle());
            jtCaloriasComida.setText(String.valueOf(modC.getCantCal()));
            jbGuardarComida.setVisible(false);
            jbGuardarModComida.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Recuerde seleccionar la comida a modificar", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbModComidaActionPerformed

    private void jbModDietaComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModDietaComidaActionPerformed
        if (listaDieta.getSelectedIndex() != -1) {
            int i = 0;
            for (Dieta f : dd.listarDietas()) {
                if (f.getNombre().equalsIgnoreCase(listaDieta.getSelectedValue())) {
                    jcbDietaComida.setSelectedIndex(i);
                    tabComidas.setSelectedIndex(2);
                    break;
                }
                i++;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Recuerde seleccionar una dieta a modificar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbModDietaComidaActionPerformed

    private void jbGuardarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarComidaActionPerformed
        Comida c = new Comida();
        try {
            if (!jtNombreComida.getText().isEmpty()) {
                c.setNombre(jtNombreComida.getText());
            }
            if (!jtDetalleComida.getText().isEmpty()) {
                c.setDetalle(jtDetalleComida.getText());
            }
            if (!jtCaloriasComida.getText().isEmpty()) {
                c.setCantCal(Integer.parseInt(jtCaloriasComida.getText()));
                c.setActivo(true);
                cd.guardarComida(c);
                limpiarCargaComida();
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos se encuentran vacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El campo 'Calorías' solo admite números", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbGuardarComidaActionPerformed

    private void jbGuardarModComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarModComidaActionPerformed
        try {
            if (!jtNombreComida.getText().isEmpty()) {
                modC.setNombre(jtNombreComida.getText());
            }
            if (!jtDetalleComida.getText().isEmpty()) {
                modC.setDetalle(jtDetalleComida.getText());
            }
            if (!jtCaloriasComida.getText().isEmpty()) {
                modC.setCantCal(Integer.parseInt(jtCaloriasComida.getText()));
                cd.modificarComida(modC);
                modC = null;
                limpiarCargaComida();
            } else {
                JOptionPane.showMessageDialog(this, "Uno o más campos se encuentran vacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El campo 'Calorías' solo admite números", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jbGuardarModComidaActionPerformed

    private void jcbDietaComidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbDietaComidaItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (ejecucionComida) {
                ejecucionComida = false;
            } else {
                modeloComidaAsignada.setRowCount(0);
                modeloComidaNoAsignada.setRowCount(0);
                Dieta dieta = (Dieta) jcbDietaComida.getSelectedItem();
                for (Comida c : dcd.listarComidaPorDieta(dieta.getIdDieta())) {
                    modeloComidaAsignada.addRow(new Object[]{
                        c.getIdComida(),
                        c.getNombre()
                    });
                }
                for (Comida cc : cd.listarComidas()) {
                    if (!dcd.listarComidaPorDieta(dieta.getIdDieta()).contains(cc)) {
                        modeloComidaNoAsignada.addRow(new Object[]{
                            cc.getIdComida(),
                            cc.getNombre()
                        });
                    }
                }
            }
        }
    }//GEN-LAST:event_jcbDietaComidaItemStateChanged

    private void jbQuitarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbQuitarComidaActionPerformed
        if (jtAsignada.getSelectedRow() != -1) {
            Dieta d = (Dieta) jcbDietaComida.getSelectedItem();
            int idCom = (Integer) jtAsignada.getValueAt(jtAsignada.getSelectedRow(), 0);
            DietaComida dc = dcd.buscarDC(d.getIdDieta(), idCom);
            dcd.eliminarDC(dc.getIdDC());
            modeloComidaAsignada.setRowCount(0);
            modeloComidaNoAsignada.setRowCount(0);
            Dieta dieta = (Dieta) jcbDietaComida.getSelectedItem();
            for (Comida c : dcd.listarComidaPorDieta(dieta.getIdDieta())) {
                modeloComidaAsignada.addRow(new Object[]{
                    c.getIdComida(),
                    c.getNombre()
                });
            }
            for (Comida cc : cd.listarComidas()) {
                if (!dcd.listarComidaPorDieta(dieta.getIdDieta()).contains(cc)) {
                    modeloComidaNoAsignada.addRow(new Object[]{
                        cc.getIdComida(),
                        cc.getNombre()
                    });
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Recuerde seleccionar una comida que quitar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbQuitarComidaActionPerformed

    private void jbAgregarComidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarComidaActionPerformed
        if (jtNoAsignada.getSelectedRow() != -1) {
            Dieta d = (Dieta) jcbDietaComida.getSelectedItem();
            int idCom = (Integer) jtNoAsignada.getValueAt(jtNoAsignada.getSelectedRow(), 0);
            DietaComida dc = new DietaComida();
            dc.setComida(cd.buscarComida(idCom));
            dc.setDieta(d);
            dcd.guardarDC(dc);
            modeloComidaAsignada.setRowCount(0);
            modeloComidaNoAsignada.setRowCount(0);
            Dieta dieta = (Dieta) jcbDietaComida.getSelectedItem();
            for (Comida c : dcd.listarComidaPorDieta(dieta.getIdDieta())) {
                modeloComidaAsignada.addRow(new Object[]{
                    c.getIdComida(),
                    c.getNombre()
                });
            }
            for (Comida cc : cd.listarComidas()) {
                if (!dcd.listarComidaPorDieta(dieta.getIdDieta()).contains(cc)) {
                    modeloComidaNoAsignada.addRow(new Object[]{
                        cc.getIdComida(),
                        cc.getNombre()
                    });
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Recuerde seleccionar una comida que agregar", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbAgregarComidaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
            FlatSolarizedLightIJTheme.setup();
            UIManager.put("Button.arc", 999);
            UIManager.put("Component.arc", 999);
            UIManager.put("TextComponent.arc", 999);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainNutriApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider SliderLD;
    private javax.swing.JPanel asignarComidas;
    private javax.swing.JPanel cabecera;
    private javax.swing.JPanel cargaComida;
    private javax.swing.JPanel cargaDieta;
    private javax.swing.JPanel cargaPaciente;
    private javax.swing.JTabbedPane contenedorTab;
    private javax.swing.JLabel fechaFin;
    private javax.swing.JLabel fechaInicio;
    private javax.swing.JPanel infoComidas;
    private javax.swing.JPanel infoDieta;
    private javax.swing.JPanel infoPaciente;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton jbAgregarComida;
    private javax.swing.JButton jbCrearDieta;
    private javax.swing.JButton jbEditComidas;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbGuardarComida;
    private javax.swing.JButton jbGuardarMod;
    private javax.swing.JButton jbGuardarModComida;
    private javax.swing.JButton jbGuardarModDieta;
    private javax.swing.JButton jbMod;
    private javax.swing.JButton jbModComida;
    private javax.swing.JButton jbModDieta;
    private javax.swing.JButton jbModDietaComida;
    private javax.swing.JButton jbQuitarComida;
    private javax.swing.JButton jbReinicio;
    private javax.swing.JComboBox<Dieta> jcbDietaComida;
    private javax.swing.JComboBox<Paciente> jcbPacienteCargaDieta;
    private javax.swing.JComboBox<Paciente> jcbPacienteDieta;
    private javax.swing.JComboBox<Paciente> jcbPacientes;
    private com.toedter.calendar.JDateChooser jdcFinal;
    private com.toedter.calendar.JDateChooser jdcInicio;
    private javax.swing.JTable jtAsignada;
    private javax.swing.JTextField jtCaloriasComida;
    private javax.swing.JTextArea jtDetalleComida;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtDomicilio;
    private javax.swing.JTable jtNoAsignada;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtNombreComida;
    private javax.swing.JTextField jtNombreDieta;
    private javax.swing.JTextField jtPesoActual;
    private javax.swing.JTextField jtPesoFinal;
    private javax.swing.JTextField jtPesoInicial;
    private javax.swing.JTextField jtTelefono;
    private javax.swing.JList<String> listaDieta;
    private javax.swing.JLabel nombreDieta;
    private javax.swing.JLabel nombrePaciente;
    private javax.swing.JPanel panelPacienteDieta;
    private javax.swing.JLabel pesoActual;
    private javax.swing.JLabel pesoFinal;
    private javax.swing.JLabel pesoInicial;
    private javax.swing.JTabbedPane tabComidas;
    private javax.swing.JTabbedPane tabDietas;
    private javax.swing.JTabbedPane tabPacientes;
    private javax.swing.JTable tablaComidaPaciente;
    private javax.swing.JTable tablaComidas;
    private javax.swing.JTable tablaPacientes;
    // End of variables declaration//GEN-END:variables

    private void head() {
        modelo.addColumn("Id Paciente");
        modelo.addColumn("Nombre");
        modelo.addColumn("DNI");
        modelo.addColumn("Domicilio");
        modelo.addColumn("Telefono");
        tablaPacientes.setModel(modelo);
        llenarTabla();
    }

    private void headComidaPaciente() {
        modeloComidaPaciente.addColumn("Nombre");
        modeloComidaPaciente.addColumn("Detalle");
        modeloComidaPaciente.addColumn("Calorías");
        tablaComidaPaciente.setModel(modeloComidaPaciente);
    }

    private void headComidas() {
        modeloComidas.addColumn("Id");
        modeloComidas.addColumn("Nombre");
        modeloComidas.addColumn("Detalle");
        modeloComidas.addColumn("Calorías");
        tablaComidas.setModel(modeloComidas);
        llenarTablaComidas();
    }

    private void headComidaAsignada() {
        modeloComidaAsignada.addColumn("Id");
        modeloComidaAsignada.addColumn("Nombre");
        jtAsignada.setModel(modeloComidaAsignada);
    }

    private void headComidaNoAsignada() {
        modeloComidaNoAsignada.addColumn("Id");
        modeloComidaNoAsignada.addColumn("Nombre");
        jtNoAsignada.setModel(modeloComidaNoAsignada);
    }

    private void llenarTabla() {
        modelo.setRowCount(0);
        for (Paciente p : pd.listarPaciente()) {
            modelo.addRow(new Object[]{
                p.getIdPaciente(),
                p.getNombre(),
                p.getDni(),
                p.getDomicilio(),
                p.getTel()
            });
        }
    }

    private void llenarTablaComidas() {
        modeloComidas.setRowCount(0);
        for (Comida c : cd.listarComidas()) {
            modeloComidas.addRow(new Object[]{
                c.getIdComida(),
                c.getNombre(),
                c.getDetalle(),
                c.getCantCal(),});
        }
    }

    private void cargarCombox() {
        jcbPacientes.removeAllItems();
        jcbPacienteDieta.removeAllItems();
        jcbPacienteCargaDieta.removeAllItems();
        for (Paciente p : pd.listarPaciente()) {
            jcbPacientes.addItem(p);
        }
        for (Paciente p : dd.listarPacientesConDieta()) {
            jcbPacienteDieta.addItem(p);
        }
        for (Paciente p : dd.listarPacientesSinDieta()) {
            jcbPacienteCargaDieta.addItem(p);
        }

        for (Dieta d : dd.listarDietas()) {
            jcbDietaComida.addItem(d);
        }
    }

    private void limpiarCargaPaciente() {
        jtDni.setText("");
        jtNombre.setText("");
        jtDomicilio.setText("");
        jtTelefono.setText("");
    }

    private void limpiarCargaDieta() {
        jtNombreDieta.setText("");
        jtPesoInicial.setText("");
        jtPesoFinal.setText("");
        jtPesoActual.setText("");
        jdcInicio.setDate(null);
        jdcFinal.setDate(null);
        cargarCombox();
    }

    private void limpiarCargaComida() {
        jtNombreComida.setText("");
        jtDetalleComida.setText("");
        jtCaloriasComida.setText("");
        jbGuardarComida.setVisible(true);
        jbGuardarModComida.setVisible(false);
        llenarTablaComidas();
    }
}